# "org" ensures this Service is used with the correct Serverless Framework Access Key.
org: tokium
# "service" is the name of this project. This will also be added to your AWS resource names.
service: ai-clipping-lambda

frameworkVersion: '3'

provider:
  name: aws
  runtime: python3.12
  region: ${opt:region, 'ap-northeast-1'}
  memorySize: ${self:custom.environments.${self:provider.stage}.memorySize}
  timeout: 900
  
  # 環境変数の設定
  environment:
    ENVIRONMENT: ${self:provider.stage}
    LOG_LEVEL: ${self:custom.environments.${self:provider.stage}.logLevel}
    OUTPUT_QUEUE_URL: ${self:custom.environments.${self:provider.stage}.outputQueueUrl}
    GEMINI_MODEL: ${self:custom.environments.${self:provider.stage}.geminiModel}
    GOOGLE_CLOUD_REGION: us-central1
    GOOGLE_APPLICATION_CREDENTIALS: ./credential.json
    S3_BUCKET_NAME: ${self:custom.environments.${self:provider.stage}.bucketName}
  
  # IAMロールの設定
  iamRoleStatements:
    # S3へのアクセス権限
    - Effect: Allow
      Action:
        - s3:GetObject
      Resource: "arn:aws:s3:::${self:custom.environments.${self:provider.stage}.bucketName}/*"
    
    # 入力SQSへのアクセス権限
    - Effect: Allow
      Action:
        - sqs:ReceiveMessage
      Resource: ${self:custom.environments.${self:provider.stage}.inputQueueArn}
    
    # 出力SQSへのアクセス権限
    - Effect: Allow
      Action:
        - sqs:SendMessage
      Resource: ${self:custom.environments.${self:provider.stage}.outputQueueArn}

custom:
  # 環境ごとの設定
  environments:
    dev:
      memorySize: 1024
      logLevel: DEBUG
      geminiModel: gemini-2.0-flash
      inputQueueArn: arn:aws:sqs:ap-northeast-1:885453572349:development-clipSuggestion-aiSuggestionRequestQueue
      outputQueueArn: arn:aws:sqs:ap-northeast-1:885453572349:development-clipSuggestion-aiSuggestionResultQueue
      outputQueueUrl: https://sqs.ap-northeast-1.amazonaws.com/885453572349/development-clipSuggestion-aiSuggestionResultQueue
      bucketName: national-tax-document-clipping-development
      
    staging:
      memorySize: 1536
      logLevel: INFO
      geminiModel: gemini-2.0-flash
      inputQueueArn: arn:aws:sqs:ap-northeast-1:885453572349:staging-clipSuggestion-aiSuggestionRequestQueue
      outputQueueArn: arn:aws:sqs:ap-northeast-1:885453572349:staging-clipSuggestion-aiSuggestionResultQueue
      outputQueueUrl: https://sqs.ap-northeast-1.amazonaws.com/885453572349/staging-clipSuggestion-aiSuggestionResultQueue
      bucketName: national-tax-document-clipping-staging
      
    prod:
      memorySize: 2048
      logLevel: INFO
      geminiModel: gemini-2.0-flash
      inputQueueArn: arn:aws:sqs:ap-northeast-1:219825478644:production-clipSuggestion-aiSuggestionRequestQueue
      outputQueueArn: arn:aws:sqs:ap-northeast-1:219825478644:production-clipSuggestion-aiSuggestionResultQueue
      outputQueueUrl: https://sqs.ap-northeast-1.amazonaws.com/219825478644/production-clipSuggestion-aiSuggestionResultQueue
      bucketName: national-tax-document-clipping-production
      
  # デフォルト環境はdev
  stage: ${opt:stage, 'dev'}

functions:
  processDocument:
    handler: handler.process_document
    events:
      - sqs:
          batchSize: 1
          arn: ${self:custom.environments.${self:provider.stage}.inputQueueArn}

resources:
  Resources: {}

package:
  patterns:
    - '!node_modules/**'
    - '!.venv/**'
    - '!.env'
    - '!.git/**'
    - '!tests/**'
    - '!.pytest_cache/**'

plugins:
  - serverless-python-requirements

# Python依存関係の設定
custom:
  pythonRequirements:
    dockerizePip: true
    useDownloadCache: true
    useStaticCache: true
    layer: true
